{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react/recommended",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "import",
    "import-newlines",
    "react-hooks",
    "simple-import-sort",
    "sort-destructure-keys"
  ],
  "rules": {
    "indent": "off",
    "no-use-before-define": "off",
    "@typescript-eslint/indent": [
      "error",
      2
    ],
    "semi": [
      2,
      "always"
    ],
    "no-extra-semi": 2,
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/type-annotation-spacing": "error",
    "arrow-parens": [
      "error",
      "always"
    ],
    "brace-style": [
      "error",
      "1tbs"
    ],
    "curly": [
      "error",
      "all"
    ],
    "default-param-last": [
      0
    ],
    "import-newlines/enforce": [
      "error",
      2048
    ],
    "jsx-quotes": [
      "error",
      "prefer-single"
    ],
    "@typescript-eslint/quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "react/prop-types": [
      0
    ],
    "object-curly-newline": [
      "error",
      {
        "ImportDeclaration": "never",
        "ObjectPattern": "never"
      }
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": [
          "const",
          "let",
          "var"
        ]
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "block-like"
      },
      {
        "blankLine": "always",
        "prev": "block-like",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "function"
      },
      {
        "blankLine": "always",
        "prev": "function",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "try"
      },
      {
        "blankLine": "always",
        "prev": "try",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "import"
      },
      {
        "blankLine": "always",
        "prev": "import",
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": "import",
        "next": "import"
      }
    ],
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/jsx-closing-bracket-location": [
      1,
      "tag-aligned"
    ],
    "react/jsx-first-prop-new-line": [
      1,
      "multiline-multiprop"
    ],
    "react/jsx-fragments": "error",
    "react/jsx-max-props-per-line": [
      1,
      {
        "maximum": 1,
        "when": "always"
      }
    ],
    "react/jsx-no-bind": 2,
    "react/jsx-sort-props": [
      1,
      {
        "noSortAlphabetically": false
      }
    ],
    "react/jsx-tag-spacing": [
      2,
      {
        "closingSlash": "never",
        "beforeSelfClosing": "always",
        "afterOpening": "never",
        "beforeClosing": "never"
      }
    ],
    "sort-destructure-keys/sort-destructure-keys": [
      2,
      {
        "caseSensitive": true
      }
    ],
    "simple-import-sort/imports": [
      2,
      {
        "groups": [
          [
            "^\u0000"
          ],
          [
            "\u0000$",
            "^@polkadot.*\u0000$",
            "^\\..*\u0000$"
          ],
          [
            "^[^/\\.]"
          ],
          [
            "^@polkadot"
          ],
          [
            "^\\.\\.(?!/?$)",
            "^\\.\\./?$",
            "^\\./(?=.*/)(?!/?$)",
            "^\\.(?!/?$)",
            "^\\./?$"
          ]
        ]
      }
    ],
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/ban-ts-comment": "off"
  }
}
